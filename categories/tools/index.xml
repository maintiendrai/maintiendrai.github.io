<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tools on 黑暗民谣</title>
    <link>http://maintiendrai.github.io/categories/tools/</link>
    <description>Recent content in Tools on 黑暗民谣</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 03 Jul 2015 12:09:09 +0800</lastBuildDate><atom:link href="http://maintiendrai.github.io/categories/tools/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>我的Git工作流</title>
      <link>http://maintiendrai.github.io/post/2015-07-03-%E6%88%91%E7%9A%84git%E5%B7%A5%E4%BD%9C%E6%B5%81/</link>
      <pubDate>Fri, 03 Jul 2015 12:09:09 +0800</pubDate>
      
      <guid>http://maintiendrai.github.io/post/2015-07-03-%E6%88%91%E7%9A%84git%E5%B7%A5%E4%BD%9C%E6%B5%81/</guid>
      <description>Git data stores •	workspace - 对应本地目录，当有文件修改，则最新体现在workspace变化
•	index - 是索引文件，指定commit要提交的内容
•	commit - 提交到本地仓库
•	HEAD - 表示本地最新的一次commit
•	git diff - 比较workspace与index
•	git diff -cached - 比较index与commit
•	git diff HEAD - 比较workspace与commit
Git 工作流 master 用于发布
develop 用户主要开发点
新功能hotfix，开个功能名的分支，这个分支不 push，写好后:
(hotfix) $ git add .
(hotfix) $ git commit -m &amp;quot;...&amp;quot;
(hotfix) $ git checkout develop
(develop) $ git pull origin develop
(develop) $ git merge hotfix (develop) $ git push origin develop</description>
    </item>
    
    <item>
      <title>折腾路由器的一天</title>
      <link>http://maintiendrai.github.io/post/2015-05-24-%E8%B7%AF%E7%94%B1%E5%99%A8%E6%8A%98%E8%85%BE/</link>
      <pubDate>Sun, 24 May 2015 12:09:09 +0800</pubDate>
      
      <guid>http://maintiendrai.github.io/post/2015-05-24-%E8%B7%AF%E7%94%B1%E5%99%A8%E6%8A%98%E8%85%BE/</guid>
      <description>周末折腾了两天路由器。一个是自己买的netgear，一个是公司的测试部买的极路由2。项目组的人叫我帮忙把极路由给刷成openwrt 说起极路由，用着挺不爽的，子网下的bonjour都搜不到。估计是端口被限制，sip呼叫也各种不靠谱，估计也是端口被限制。
记下流水账～
#极路由 ##降级 我手头上的极路由2是9010版本。我发现极路由很鸡贼啊，不能直接刷其它系统的firmware.bin文件。我操～
搜了一下，可以降级到9006
我试了很多个rom，都不能成功。
后面我是用这个rom降级的
极2	0.9006.2.6020s版固件
###刷机步骤：
1：拔掉路由电源
2：用网线将极路由黄色的 LAN 口与电脑网口相连
3：将电脑本地连接的 IP 设置为ip：192.168.1.88。子网掩码：255.255.255.0。网关空着，不用填写，不知道在哪里设置的，请看这里：win7win8：http://jingyan.baidu.com/article/22fe7ced18876f3003617f5e.html XP：http://jingyan.baidu.com/article/77b8dc7fc0f5786174eab6af.html
4：根据操作系统，32位运行tftpd32, 64位运行tftpd64
5：用尖锐物按住极路由 RESET 不放，再给极路由插上电源
6：等待电脑上 tftpd 出现传输 recovery.bin 进度条完成后，松开 RESET（进度条很快的，几秒钟）
7：极路由面板灯进入跑马灯状态，所有灯轮流闪，跑完后，系统自动重启，刷机完成
8：改电脑本地连接属性的ip为自动获取，访问http://192.168.199.1路由管理界面 密码：admin
然后由于极路由它很鸡贼，还要去root它才能刷第三方的固件
##搜狐插件大法：极路由Root
极路由云插件“搜狐视频远程下载”使用了开源下载工具aria2，由于aria2主程序aria2c占用空间较大，因此被安装到了SD卡的usr/bin目录。aria2c在每次开机时运行，因此给极客们一个ROOT机会。ROOT的思路是：用自己的脚本文件替换aria2c文件，在脚本文件中加入启用dropber服务的指令。具体方法如下：
1、安装云插件“搜狐视频远程下载”，然后验证aria2c是否安装运行，验证方法：在PC机上运行下面的命令：
telnet 192.168.199.1 6800
如果能连接，说明aria2c已经运行。
2、关掉路由器，拔出SD卡，将SD卡插入SD读卡器。 (由于极路由系统是基于openwrt再封一层，openwrt是linux的，所以SD卡是ext4的，只能mount在linux的机器上。mac os也不支持，后面的操作是在ubuntu下完成的)
3、Linux操作系统能自动加载USB SD读卡器驱动，一般情况下设备名为/dev/sdb，或者用dmesg命令查询驱动程序日志，从中发现设备名。SD卡有2个分区，第1个是大小为1GB的luks加密分区，第2个是正常的ext4分区。9006版固件的aria2c文件在第2分区，因此需要mount该分区，命令为：
mount -t ext4 /dev/sdb2 /mnt
4、aria2c文件在/mnt/usr/bin目录中，先换名，然后替换。
cd /mnt/usb/bin
mv aria2c aria2c.orig
然后用vi命令创建文件aria2c，内容为：
#!/bin/sh if [ &amp;quot;$1&amp;quot; = &amp;quot;ok&amp;quot; ]; then rm -f /tmp/data/usr/bin/aria2c mv /tmp/data/usr/bin/aria2c.</description>
    </item>
    
    <item>
      <title>SVN迁移到Git的过程(svn2git)</title>
      <link>http://maintiendrai.github.io/post/2015-05-12-svn-%E5%AE%8C%E7%BE%8E%E8%BF%81%E7%A7%BB%E8%87%B3-git/</link>
      <pubDate>Tue, 12 May 2015 12:09:09 +0800</pubDate>
      
      <guid>http://maintiendrai.github.io/post/2015-05-12-svn-%E5%AE%8C%E7%BE%8E%E8%BF%81%E7%A7%BB%E8%87%B3-git/</guid>
      <description>##SVN完美迁移到Git
###前言 SVN迁移到GIT，一般我们想到的是《Pro Git》上的git svn命令 它可以把SVN迁移到GIT，它可以支持双向提交，即提交到GIT的同时提交到SVN。但是这个可能是不完美的，因为SVN跟GIT毕竟不是一个东西，组织结构也不一样 github上面推荐svn2git工具。支持完美GIT，但是对SVN的双向commit有所欠缺
###Installation Make sure you have git, git-svn, and ruby installed. svn2git is a ruby wrapper around git&amp;rsquo;s native SVN support through git-svn. It is possible to have git installed without git-svn installed, so please do verify that you can run $ git svn successfully. For a Debian-based system, the installation of the prerequisites would look like:
$ sudo apt-get install git-core git-svn ruby Once you have the necessary software on your system, you can install svn2git through rubygems, which will add the svn2git command to your PATH.</description>
    </item>
    
    <item>
      <title>SVN迁移到Git的过程</title>
      <link>http://maintiendrai.github.io/post/2013-10-12-git-svn/</link>
      <pubDate>Sat, 12 Oct 2013 12:09:09 +0800</pubDate>
      
      <guid>http://maintiendrai.github.io/post/2013-10-12-git-svn/</guid>
      <description>###迁移SVN到git 关于在VCS中SVN和Git之间的迁移（Clone）这个部分网上已经有大批的文章介绍，而且都非常不错，能够满足我们的常见的需求，这里介绍的是我自己整理的一些技巧和使用中出现的一些问题和疑问。 阅读本篇文章，请先有一些Git和SVN的使用经验。
首先需要读取这个软件创建时的版本号
svn log https://192.168.60.200/svn/wifidisk|tail -4|head -1 得到了如下信息，获得一个版本号 1
r1 | plugin-master | 2010-12-03 20:12:29 +0800 (五, 03 12 2010) | 1 line 开始clone代码
git svn clone https://192.168.60.200/svn/wifidisk -s r1:HEAD wifidisk 注： -s 参数是表面使用的是svn标准命名方法，即 trunk，tags，branches，这个参数有时很重要，建议使用，命令后面还可以加个文件夹名字作为clone后的目录，如果没有默认是当前路径。 git svn fetch 这个步骤，可能碰到只想从某个版本开始进行fetch，那么请需要 –r 参数。
注： 1 是你想要从这个版本开始fetch，如何查看这个版本号，你可以使用 svn 命令（windows下需要安装Subversion Client，e.g. sliksvn），简单使用就是 svn log svn_url ,这个时候，你可能看到整屏在刷新，没关系，看到log就行。当然更简单的就是使用TortoiseSVN-&amp;gt; Show log。
到这步的时候，本地已经clone了SVN仓库，现在需要的就是提交到远程了。首先，关联github远程仓库，如下：
git remote add origin git@192.168.60.151:lilkr/wifidisk.git git push -u origin master ###导入tag跟branch
你还需要一点post-import（导入后） 清理工作。最起码的，应该清理一下git svn 创 建的那些怪异的索引结构。首先要移动标签，把它们从奇怪的远程分支变成实际的标签，然 后把剩下的分支移动到本地。 要把标签变成合适的Git 标签，运行 将原本以tag/ 开头的远程分支的索引变成真正的（轻巧的）标签。</description>
    </item>
    
  </channel>
</rss>
